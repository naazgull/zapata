#include <zapata/http/HTTPObj.h>

#include <iostream>
#include <zapata/exceptions/CastException.h>

auto
zpt::init(zpt::HTTPReq& _req) -> void {
    time_t _rawtime = time(nullptr);
    struct tm _ptm;
    char _buffer_date[80];
    localtime_r(&_rawtime, &_ptm);
    strftime(_buffer_date, 80, "%a, %d %b %Y %X %Z", &_ptm);

    _req->method(zpt::Get);
    _req->header("User-Agent", "zapata");
    _req->header("Date", std::string(_buffer_date));
}

auto
zpt::init(zpt::HTTPRep& _rep) -> void {
    time_t _rawtime = time(nullptr);
    struct tm _ptm;
    char _buffer_date[80];
    localtime_r(&_rawtime, &_ptm);
    strftime(_buffer_date, 80, "%a, %d %b %Y %X %Z", &_ptm);

    _rep->status(zpt::http::HTTP404);
    _rep->header("Server", "zapata");
    _rep->header("Vary", "Accept-Language,Accept-Encoding,X-Access-Token,Authorization,E-Tag");
    _rep->header("Date", std::string(_buffer_date));
}

zpt::HTTPObj::HTTPObj() {}

zpt::HTTPObj::~HTTPObj() {}

auto
zpt::HTTPObj::body() const -> std::string const& {
    return this->__body;
}

auto
zpt::HTTPObj::body(std::string const& _body) -> void {
    this->__headers["Content-Length"] = std::to_string(_body.length());
    this->__body.assign(_body.data());
}

auto
zpt::HTTPObj::headers() const -> zpt::http::header_map const& {
    return this->__headers;
}

auto
zpt::HTTPObj::header(std::string const& _idx) const -> std::string const& {
    static std::string const _empty{ "" };
    auto _found = this->__headers.find(zpt::r_prettify_header_name(_idx));
    if (_found != this->__headers.end()) { return _found->second; }
    return _empty;
}

auto
zpt::HTTPObj::header(std::string const& _name, std::string const& _value) -> void {
    this->__headers[zpt::r_prettify_header_name(_name)] = _value;
}

auto
zpt::HTTPObj::version() const -> std::string const& {
    return this->__version;
}

auto
zpt::HTTPObj::version(std::string const& _version) -> void {
    this->__version.assign(_version);
}

zpt::HTTPObj::operator std::string() { return this->to_string(); }

auto
zpt::HTTPObj::to_string() const -> std::string {
    std::string _return;
    this->stringify(_return);
    return _return;
}

namespace zpt {
namespace http {
std::string nil_header = "";

const char* method_names[] = { "GET",   "PUT",   "POST",     "DELETE", "HEAD",  "OPTIONS",
                               "PATCH", "REPLY", "M-SEARCH", "NOTIFY", "TRACE", "CONNECT" };

const char* status_names[] = {
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "Continue ",
    "Switching Protocols ",
    "Processing ",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "OK ",
    "Created ",
    "Accepted ",
    "Non-Authoritative Information ",
    "No Content ",
    "Reset Content ",
    "Partial Content ",
    "Multi-Status ",
    "Already Reported ",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "IM Used ",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "Multiple Choices ",
    "Moved Permanently ",
    "Found ",
    "See Other ",
    "Not Modified ",
    "Use Proxy ",
    "(Unused) ",
    "Temporary Redirect ",
    "Permanent Redirect ",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "Bad Request ",
    "Unauthorized ",
    "Payment Required ",
    "Forbidden ",
    "Not Found ",
    "Method Not Allowed ",
    "Not Acceptable ",
    "Proxy Authentication Required ",
    "Request Timeout ",
    "Conflict ",
    "Gone ",
    "Length Required ",
    "Precondition Failed ",
    "Payload Too Large ",
    "URI Too Long ",
    "Unsupported Media Type ",
    "Requested Range Not Satisfiable ",
    "Expectation Failed ",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "Unprocessable Entity ",
    "Locked ",
    "Failed Dependency ",
    "Unassigned ",
    "Upgrade Required ",
    "Unassigned ",
    "Precondition Required ",
    "Too Many Requests ",
    "Unassigned ",
    "Request Header Fields Too Large ",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "Unavailable For Legal Reasons",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    "Internal Server Error ",
    "Not Implemented ",
    "Bad Gateway ",
    "Service Unavailable ",
    "Gateway Timeout ",
    "HTTP Version Not Supported ",
    "Variant Also Negotiates (Experimental) ",
    "Insufficient Storage ",
    "Loop Detected ",
    "Unassigned ",
    "Not Extended ",
    "Network Authentication Required ",
};
} // namespace http
} // namespace zpt
